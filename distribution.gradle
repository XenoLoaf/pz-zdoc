// changelog.gradle
apply from: 'https://git.io/JqJiC'

jar.from 'version.txt'

distributions.main.contents {
    it.from ('README.md', 'LICENSE.txt', 'CHANGELOG.md')
    // version.txt is used by version command
    it.from(projectDir) {
        it.include 'version.txt'
    }
    it.exclude {
        File file = it.file
        String filename = file.getName()
        /*
         * there is a bug that occurs when running distribution tasks on Github CI
         * where the distribution archive tries to add itself to archive
         * @see https://github.com/cocolabs/pz-zdoc/issues/21
         */
        if (filename.startsWith(archivesBaseName) && filename.endsWithAny('.zip', '.tar')) {
            return true
        }
        if (!CI) {
            // exclude Project Zomboid classes
            if (file.toPath().startsWith(zomboidClassesDir.toPath())) {
                return true
            }
            // exclude Project Zomboid libraries
            if (file.toPath().startsWith(gameDir)) {
                return true
            }
        }
        return false
    }
}
// generate changelog BEFORE creating distribution
[ 'assemble', 'assembleDist', 'installDist' ].forEach({
    tasks.named(it).configure({it.dependsOn('generateChangelog')})
})
// run distribution archive tasks AFTER generating changelog
[ 'distTar', 'distZip' ].forEach({
    tasks.named(it).configure({it.mustRunAfter('generateChangelog')})
})
def cleanScripts = tasks.register('cleanScripts', Delete.class) {
    it.description('Delete build scripts directory.')
    it.group('zomboid')
    it.delete("$buildDir/scripts")
}
tasks.named('installDist').configure{
    it.dependsOn(cleanScripts)
}

tasks.named('startScripts').configure {
    it.setWindowsStartScriptGenerator(new ZWindowsStartScriptGenerator())
    it.setUnixStartScriptGenerator(new ZUnixStartScriptGenerator())

    // do not add provided files to classpath, they are not included in distribution
    it.classpath -= configurations.zomboidImplementation
}

publishing {
    repositories {
        maven {
            name = 'GitHubPackages'
            url = uri('https://maven.pkg.github.com/cocolabs/pz-zdoc')
            credentials {
                username = project.findProperty('ghp.user') ?: System.getenv('GHP_USER')
                password = project.findProperty('ghp.token') ?: System.getenv('GHP_TOKEN')
            }
        }
    }
    publications.register('zdoc', MavenPublication.class) {
        it.from(project.components.java as SoftwareComponent)
    }
}