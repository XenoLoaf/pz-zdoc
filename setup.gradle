import java.nio.file.Paths

Properties properties = new Properties()
def propertiesFile = project.rootProject.file('local.properties')
if (propertiesFile.exists()) {
    properties.load(propertiesFile.newDataInputStream())
}
project.ext.gameDir = Paths.get(properties.getProperty('game.dir', ''))
if (project.ext.gameDir == null)
{
    if (providers.environmentVariable('GAME_DIR').present) {
        project.ext.gameDir = Paths.get(providers.environmentVariable('GAME_DIR').get())
    }
    else if (System.hasProperty('game.dir')) {
        project.ext.gameDir = Paths.get(System.getProperty('game.dir'))
    }
    else throw new RuntimeException('Game directory path not specified')
}
/**
 * Register a project property of a given name as a {@code boolean} value.
 *
 * @param name name of the property to register.
 * @param defaultValue value to register with if property is {@code null}.
 * @see Boolean#parseBoolean(String)
 */
void registerBooleanProjectProperty(String name, boolean defaultValue) {
    def property = project.findProperty(name)
    if (property != null) {
        project.ext.setProperty(name, Boolean.parseBoolean(property as String))
    }
    else project.ext.setProperty(name, defaultValue)
}
// is the build being run on a CI server?
registerBooleanProjectProperty('isCI', false)

// should gradle run spotless tasks?
registerBooleanProjectProperty('makeSpotless', true)
