on:
  push:
    tags:
      # Versioned release tags
      - 'v*'

# Continuous delivery
name: Java CD

jobs:
  test:
    name: Unit test on platforms
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest, ubuntu-latest ]
    steps:
      # Cache dependencies
      - uses: burrunan/gradle-cache-action@v1
        with:
          arguments: dependencies
      # Checkout repository
      - uses: actions/checkout@v2
      # Setup Java environment
      - name: Setup JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      # Assemble main classes with gradle
      - name: Assemble classes
        uses: burrunan/gradle-cache-action@v1
        with:
          arguments: classes --stacktrace
      # Run unit tests with gradle
      - name: Run Unit Tests
        uses: burrunan/gradle-cache-action@v1
        with:
          arguments: test --stacktrace
      # Upload test reports as run artifact
      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-report-${{ runner.os }}
          path: ./build/reports/tests/
  build:
    name: Build and release on Linux
    runs-on: ubuntu-latest
    needs: test
    steps:
      # Cache dependencies
      - uses: burrunan/gradle-cache-action@v1
        with:
          arguments: dependencies
      # Checkout repository
      - uses: actions/checkout@v2
      # Setup Java environment
      - name: Setup JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      # Ruby is needed to generate changelog
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0
          bundler-cache: true
      # Assemble main classes with gradle
      - name: Assemble classes
        uses: burrunan/gradle-cache-action@v1
        with:
          arguments: classes --stacktrace
      # Generate project changelog with gradle
      - name: Generate changelog
        env:
          CHANGELOG_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./gradlew generateChangelog --stacktrace
      # Assemble the output of this project with gradle
      - name: Assemble distribution
        uses: burrunan/gradle-cache-action@v1
        with:
          arguments: assembleDist -x generateChangelog --stacktrace
