on:
  workflow_dispatch:
  push:
    tags:
      # Versioned release tags
      - 'v*'

# Continuous delivery
name: Java CD

jobs:
  test:
    name: Unit test on platforms
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest, ubuntu-latest ]
    steps:
      # Checkout repository
      - uses: actions/checkout@v2
      # Setup Java environment
      - name: Setup JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      # Assemble main classes with gradle
      - name: Assemble classes
        uses: burrunan/gradle-cache-action@v1
        with:
          arguments: classes --stacktrace
      # Cache gradle temporary files
      - name: Cache gradle files
        uses: actions/cache@v2
        with:
          path: |
            ./.gradle
            ./buildSrc/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      # Cache java compile output
      - name: Cache build files
        uses: actions/cache@v2
        with:
          path: |
            ./build/classes
            ./build/resources
            ./buildSrc/build
          key: ${{ runner.os }}-${{ github.sha }}
      # Run unit tests with gradle
      - name: Run Unit Tests
        uses: burrunan/gradle-cache-action@v1
        with:
          arguments: test --stacktrace
      # Upload test reports as run artifact
      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-report-${{ runner.os }}
          path: ./build/reports/tests/

  generate:
    name: Generate changelog
    runs-on: ubuntu-latest
    steps:
      # Checkout repository
      - uses: actions/checkout@v2
      # Ruby is needed to generate changelog
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0
          bundler-cache: true
      # Generate project changelog with gradle
      - name: Generate changelog
        env:
          CHANGELOG_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: burrunan/gradle-cache-action@v1
        with:
          arguments: generateChangelog --stacktrace

  build:
    name: Build and release on Linux
    runs-on: ubuntu-latest
    needs: [ test, generate ]
    steps:
      # Checkout repository
      - uses: actions/checkout@v2
      # Setup Java environment
      - name: Setup JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      # Cache gradle temporary files
      - name: Cache gradle files
        uses: actions/cache@v2
        with:
          path: |
            ./.gradle
            ./buildSrc/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      # Cache java compile output
      - name: Cache build files
        uses: actions/cache@v2
        with:
          path: |
            ./build/classes
            ./build/resources
            ./buildSrc/build
          key: ${{ runner.os }}-${{ github.sha }}
      # Assemble the output of this project with gradle
      - name: Assemble distribution
        uses: burrunan/gradle-cache-action@v1
        with:
          arguments: assembleDist -x generateChangelog --stacktrace
      # Parse the tag and see if it's a pre-release
      - name: Read release tag
        id: read-tag
        run: |
          echo ::set-output name=releaseName::$(echo ${{ github.ref }} | cut -c 12-)
          if [[ ${{ github.ref }} =~ ^.*\-(alpha|beta|rc).*$ ]]; then
              echo ::set-output name=preRelease::true
          fi
      # Create a release in Github repository
      - name: Create Github Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ steps.read-tag.outputs.releaseName }}
          prerelease: ${{ steps.read-tag.outputs.preRelease }}
          draft: true